TODO:

DeploysController:
-Fully implement the deploying logic, including setting a deploy to "Not Ready" if the deploy is set to Deploying

db:
*-Make depFeature and depEnvironment foreign keys, and create relationship with Environments table
*-Create Smoke and Status tables
*-Remake SQL generation script

Global:

-Have all depFeature and depEnvironment write as the Feature and Environment KEY. This needs to be applied via the tables, as well as the drop-down menus
	Page List:
		Homepage:
			-Calendar
			-GET for tblSmoke
			-GET for tblStatus
			-Rename attributes: 
				-depFeature -> feaID
				-depEnvironment -> envID
				-depSmoke -> smokeID
				-depStatus -> statusID
			
		QA:
			*-Current Table
			*-Queue Table
			*-Status Modal
			*-Record Modal
			*-GET for tblSmoke
			*-GET for tblStatus
			*-Rename attributes: 
				-depFeature -> feaID
				-depEnvironment -> envID
				-depSmoke -> smokeID
				-depStatus -> statusID
		Developer:
			*-Current Table
			*-Queue Table
			*-Status Modal
			-Record Modal
			-Quick Deploy Modal
			*-GET for tblSmoke
			*-GET for tblStatus
			*-Rename attributes: 
				-depFeature -> feaID
				-depEnvironment -> envID
				-depSmoke -> smokeID
				-depStatus -> statusID
		New Deploy:
			*-Feature drop-down
			*-Environment drop-down
			*-Edit Template (table)
			*-Read Template (table)
			*-Rename attributes: 
				-depFeature -> feaID
				-depEnvironment -> envID
				-depSmoke -> smokeID
				-depStatus -> statusID

db.tblNotes:
*-Add visID field

ChangeLog/Index.html and ChangeLogJS
*-Add noteVisID field that auto-increments upon creation of new note
-Calculate time with timezone included (noteDateTime)
*-Have the text editor bind to an observable array
*-Display the text preview as HTML value, and binded to observable array property (noteBody)
*-Add an "Edit" button AND functionality
*-Remove some tools from the text editor
-Keep table header static when scrolling

NewDeploy/Index.html and NewDeployJS
-Calculate time with timezone included (noteDateTime)
*-Add functionality to select master change log to apply to seperate deploys by default; once a master deploy has been selected,
	a "Selected Change Log" field should appear, and the "Select Change Log" button should change to "Select a Different Change Log"
*-Deploy should have a noteID field
*-Edit Deploy field should have a change log button to select change log
*-Add sorting to notes array
*-Add selected field color
*-Have modal go to original change log when selecting from table
*-Make page compatable for mobile
*-Disable SUBMIT button until at least one record has been entered
*-Add a "Remove" button AND function in deploy table
*-Add a "Remove Selection" button for master change log
*-Add a "Remove CL" button in deploys table
*-Add an "Edit" button AND function in the change log modal
*-Refresh UI after new change log
-Add a few more formatting tools to text editor
-Implement empty table template (low priority)
-Change focus to selected row when opening modal(low priority)

Developer/Index.html and DeveloperJS
*-Calculate timezone on quick deploy
*-Calculate timezone on record edit
*-OVERHAUL: Get rid of the Smoke Queue. It's a little overwhelming.
	-Add a Smoke Status field into the current deploys table.
	-Inside the deploy status field, add the update status button, with the deploy status text embedded inside.
*-Update table headers with black background/white text with global class (.fancy-header?)
-FIX status change when set to fail
-Add a tblNotes GET request
-Add a change log button to deploy modal
-Copy/Paste change log modal and functionality from NewDeployJS and html file
-Have deploy details modal transition to change log modal on request
*-Remove green from color-scheme when deploy has FINISHED deploying

QA/Index.html and QAJS
*-FIX: Planned date and time in details modals
-OVERHAUL: Get rid of the Smoke Queue. It's a little overwhelming.
	-Add a Smoke Status field into the current deploys table. In this field will be the update status button with the smoke status text
	embedded inside
-Update table headers with black background/white text with global class (.fancy-header?)
-Add a tblNotes GET request
-Add a change log button to deploy modal
-Copy/Paste change log modal and functionality from NewDeployJS and html file WITHOUT the ability to view/change other change logs
-Have deploy details modal transition to change log modal on request
-Remove green from color-scheme when deploy has FINISHED deploying